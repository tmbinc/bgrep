This is an binary grep program forked from tmbinc/bgrep.

I was trying to find specific binary signatures in a program at RUNTIME. But
sadly the original version of bgrep won't do much help so I decided to modify
it.

My bgrep now supports searching both files and processes, using a modified
Sunday algorithm with masked patterns. I also removed some rarely-used pattern
grammar to simplify the code.

Feel free to modify, branch, fork, improve. Re-licenses as BSD.

usage: bgrep -[pfrv] [-l limit] <hex> <target>
options:
  -p, --process: virtual mode, <target> is pid
  -f, --file: physical mode (default), <target> is path of file
  -r, --reverse: reversed search
  -v, --verbose: show both address and binary
  -l, --limit [count]: max number of results to show

The hex string is made up of 0-9, a-f, A-F and wildcard ?. Spaces are
allowed to avoid mistakes.

an example to find x86 function prefixes in process 9999:

bgrep --process --limit 10 "5589e5??" 9999
